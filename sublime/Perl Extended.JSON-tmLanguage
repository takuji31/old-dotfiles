{
    "name": "Perl Extended",
    "scopeName": "source.perl.extended",
    "fileTypes": [
        "pl",
        "pm",
        "t",
        "psgi"
    ],
    "firstLineMatch": "^#!.*\\bperl\\b", 
    "patterns": [
        {
            "match": "\\bstate\\b", 
            "name": "storage.modifier.perl.extended"
        },
        {
            "match": "(?<!->)\\b(try|catch)\\b", 
            "name": "keyword.control.perl.extended"
        },
        {
            "match": "(?<=use|no)\\s+\\b(lib|strict|warnings|feature|utf8|mro|constant|diagnostics|auto(use|die)|parent|overload|version|open|[\\d\\._\"]+)\\b",
            "captures": {
                "1": { "name": "keyword.control.pragma.perl.extended" }
            }
        },
        {
            "match": "(?<=use)\\s+\\b(base|encoding)\\b",
            "captures": {
                "1": { "name": "invalid.deprecated.pragma.perl.extended" }
            }
        },
        {
            "match": "\\b(say)\\b", 
            "name": "support.function.perl.extended"
        },
        {
            "match": "\\b(@|%|\\$)[a-zA-Z0-9_]\\b",
            "name": "variable.other.perl.extended"
        },
                {
            "begin": "\\b(?=s([^\\s\\w\\[({<]).*\\1([egimosr]*)([\\}\\)\\;\\,]|\\s+))", 
            "comment": "string.regexp.replaceXXX", 
            "end": "((([egimosr]*)))(?=([\\}\\)\\;\\,]|\\s+|$))", 
            "endCaptures": {
                "1": {
                    "name": "string.regexp.replace.perl"
                }, 
                "2": {
                    "name": "punctuation.definition.string.perl"
                }, 
                "3": {
                    "name": "keyword.control.regexp-option.perl"
                }
            }, 
            "patterns": [
                {
                    "begin": "(s\\s*)([^\\s\\w\\[({<])", 
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.string.perl"
                        }, 
                        "1": {
                            "name": "support.function.perl"
                        }
                    }, 
                    "end": "(?=\\2)", 
                    "name": "string.regexp.replaceXXX.simple_delimiter.perl", 
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }, 
                {
                    "begin": "'", 
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.string.perl"
                        }
                    }, 
                    "end": "'", 
                    "name": "string.regexp.replaceXXX.format.single_quote.perl", 
                    "patterns": [
                        {
                            "match": "\\\\['\\\\]", 
                            "name": "constant.character.escape.perl.perl"
                        }
                    ]
                }, 
                {
                    "begin": "([^\\s\\w\\[({<])", 
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.string.perl"
                        }
                    }, 
                    "end": "\\1", 
                    "name": "string.regexp.replaceXXX.format.simple_delimiter.perl", 
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }, 
                        {
                            "include": "#variable"
                        }
                    ]
                }
            ]
        }, 
        {
            "begin": "\\b(?=(?<!\\\\)s\\s*([^\\s\\w\\[({<]))", 
            "comment": "string.regexp.replace.extended", 
            "end": "\\2((([egimosr]*x[egimosr]*)))\\b", 
            "endCaptures": {
                "1": {
                    "name": "string.regexp.replace.perl"
                }, 
                "2": {
                    "name": "punctuation.definition.string.perl"
                }, 
                "3": {
                    "name": "keyword.control.regexp-option.perl"
                }
            }, 
            "patterns": [
                {
                    "begin": "(s)\\s*(.)", 
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.string.perl"
                        }, 
                        "1": {
                            "name": "support.function.perl"
                        }
                    }, 
                    "end": "(?=\\2)", 
                    "name": "string.regexp.replace.extended.simple_delimiter.perl", 
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }, 
                {
                    "begin": "'", 
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.string.perl"
                        }
                    }, 
                    "end": "'(?=[egimosr]*x[egimosr]*)\\b", 
                    "name": "string.regexp.replace.extended.simple_delimiter.perl", 
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }, 
                {
                    "begin": "(.)", 
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.string.perl"
                        }
                    }, 
                    "end": "\\1(?=[egimosr]*x[egimosr]*)\\b", 
                    "name": "string.regexp.replace.extended.simple_delimiter.perl", 
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }, 
                        {
                            "include": "#variable"
                        }
                    ]
                }
            ]
        },
        { "include": "source.perl" }
    ],
    "uuid": "4876db41-622a-42d0-85fa-ea8be6fbe533"
}